{"version":3,"file":"component---src-pages-news-index-tsx-b088f58ed3e2cacaac0f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/news/NewsBanner/index.tsx","webpack://gatsby-starter-default/./src/hooks/useNewsGatsbyImage.ts","webpack://gatsby-starter-default/./src/components/news/NewsDescription/index.tsx","webpack://gatsby-starter-default/./src/components/news/NewsList/NewsCategory/CategoryButton/index.tsx","webpack://gatsby-starter-default/./src/components/news/NewsList/NewsCategory/index.tsx","webpack://gatsby-starter-default/./src/components/news/NewsList/NewsItem/index.tsx","webpack://gatsby-starter-default/./src/hooks/useMoreNewsItems.ts","webpack://gatsby-starter-default/./src/components/news/NewsList/index.tsx","webpack://gatsby-starter-default/./node_modules/query-string/node_modules/decode-uri-component/index.js","webpack://gatsby-starter-default/./node_modules/split-on-first/index.js","webpack://gatsby-starter-default/./node_modules/filter-obj/index.js","webpack://gatsby-starter-default/./node_modules/query-string/base.js","webpack://gatsby-starter-default/./node_modules/query-string/index.js","webpack://gatsby-starter-default/./src/pages/news/index.tsx"],"sourcesContent":["import React from 'react'\r\nimport { useNewsGatsbyImage } from 'hooks/useNewsGatsbyImage'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\n\r\nconst NewsBanner = function () {\r\n  const { newsBanner } = useNewsGatsbyImage()\r\n  return (\r\n    <div className=\"w-full\">\r\n      <GatsbyImage image={newsBanner} alt={'텔로스 뉴스 베너 이미지'} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewsBanner\r\n","import { graphql, useStaticQuery } from 'gatsby'\r\n\r\nexport const useNewsGatsbyImage = () => {\r\n  const imageData = useStaticQuery(graphql`\r\n    query newsPageImage {\r\n      NewsBanner: file(name: { eq: \"news_banner\" }) {\r\n        childImageSharp {\r\n          gatsbyImageData(quality: 100)\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const newsBanner = imageData.NewsBanner.childImageSharp.gatsbyImageData\r\n\r\n  return { newsBanner }\r\n}\r\n","import React from 'react'\r\n\r\nconst NewsDescription = function () {\r\n  return (\r\n    <div className=\"mx-auto mt-30 sm:mt-40 md:mt-60 px-30 sm:px-50 max-w-1600 text-c-black-300\">\r\n      <h2 className=\"font-bold text-36 ssm:text-40 md:text-44 font-open-sans\">\r\n        News\r\n      </h2>\r\n      <p className=\"text-18 ssm:text-20 md:text-24 break-keep\">\r\n        새로운 텔로스의 소식, 언론보도 등 다양한 소식들을 만나 보실 수 있습니다.\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewsDescription\r\n","import React from 'react'\r\nimport clsx from 'clsx'\r\n\r\ntype Props = {\r\n  children: React.ReactNode\r\n  active: boolean\r\n} & React.ButtonHTMLAttributes<HTMLButtonElement>\r\n\r\nconst CategoryButton = ({ children, onClick, active }: Props) => {\r\n  return (\r\n    <button\r\n      className={clsx(\r\n        active\r\n          ? 'bg-c-orange-300 text-white'\r\n          : 'bg-c-gray-300 text-c-black-300',\r\n      )}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default CategoryButton\r\n","import React from 'react'\r\nimport CategoryButton from './CategoryButton'\r\n\r\nexport type CategoryListProps = {\r\n  selectedCategory: string\r\n  categoryList: Record<string, number>\r\n  itemClickCallback: Function\r\n}\r\n\r\nconst NewsCategory = ({\r\n  selectedCategory,\r\n  categoryList,\r\n  itemClickCallback,\r\n}: CategoryListProps) => {\r\n  const handleCategoryItemClick = (name: string) => {\r\n    history.pushState(null, '', `?category=${name}`)\r\n    itemClickCallback(name)\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-wrap font-semibold gap-15 md:gap-20 sm:text-18 md:text-20 all:font-open-sans text-c-black-300 under:py-6 under:px-15 md:under:py-8 md:under:px-25 under:rounded-3xl\">\r\n      {Object.entries(categoryList).map(([name, count]) => {\r\n        return (\r\n          <CategoryButton\r\n            onClick={() => handleCategoryItemClick(name)}\r\n            active={name === selectedCategory}\r\n            key={name}\r\n          >\r\n            <span>{name}</span>\r\n          </CategoryButton>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewsCategory\r\n","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\n\r\ntype NewsItemProps = PostFrontmatterType & { link: string }\r\nconst NewsItem = ({\r\n  title,\r\n  date,\r\n  categories,\r\n  summary,\r\n  thumbnail: {\r\n    childImageSharp: { gatsbyImageData },\r\n  },\r\n  link,\r\n}: NewsItemProps) => {\r\n  return (\r\n    <Link to={link} className=\"overflow-hidden\">\r\n      <article>\r\n        <GatsbyImage\r\n          className=\"w-full\"\r\n          image={gatsbyImageData}\r\n          alt={'텔로스 뉴스 썸네일 이미지'}\r\n        />\r\n\r\n        <p className=\"mt-10 truncate text-18 ssm:text-20 md:text-22\">{title}</p>\r\n        <span className=\"text-16 md:text-18 text-c-gray-400\">{date}</span>\r\n      </article>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default NewsItem\r\n","import { MutableRefObject, useRef, useEffect, useState, useMemo } from 'react'\r\n\r\nexport type useInfiniteScrollType = {\r\n  containerRef: MutableRefObject<HTMLDivElement | null>\r\n  postList: PostListItemType[]\r\n  more: Function\r\n  isEnd: Boolean\r\n}\r\n\r\nconst NUMBER_OF_ITEMS_PER_PAGE = 9\r\n\r\nconst useMoreNewsItems = function (\r\n  selectedCategory: string,\r\n  posts: PostListItemType[],\r\n) {\r\n  const containerRef = useRef<HTMLDivElement | null>(null)\r\n\r\n  const [count, setCount] = useState<number>(1)\r\n\r\n  const postListByCategory = useMemo(\r\n    () =>\r\n      selectedCategory === 'All'\r\n        ? posts\r\n        : posts.filter(\r\n            ({\r\n              node: {\r\n                frontmatter: { categories },\r\n              },\r\n            }: PostListItemType) => categories.includes(selectedCategory),\r\n          ),\r\n    [selectedCategory],\r\n  )\r\n\r\n  useEffect(() => setCount(1), [selectedCategory])\r\n\r\n  const more = () => {\r\n    setCount(prev => prev + 1)\r\n  }\r\n\r\n  return {\r\n    containerRef,\r\n    postList: postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE),\r\n    more,\r\n    get isEnd() {\r\n      return (\r\n        posts.length <=\r\n          postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE)\r\n            .length ||\r\n        postListByCategory.slice(0, count * NUMBER_OF_ITEMS_PER_PAGE).length <\r\n          NUMBER_OF_ITEMS_PER_PAGE\r\n      )\r\n    },\r\n  }\r\n}\r\n\r\nexport default useMoreNewsItems\r\n","import React from 'react'\r\nimport NewsCategory, { CategoryListProps } from './NewsCategory'\r\nimport NewsItem from './NewsItem'\r\nimport useMoreNewsItems, { useInfiniteScrollType } from 'hooks/useMoreNewsItems'\r\nimport { MoreButton } from 'components/shared/Icons'\r\n\r\ntype PostListProps = {\r\n  selectedCategory: string\r\n  posts: PostListItemType[]\r\n} & CategoryListProps\r\n\r\nconst NewsList = function ({\r\n  posts,\r\n  selectedCategory,\r\n  ...rest\r\n}: PostListProps) {\r\n  // 아이템 더보기\r\n  const { containerRef, postList, more, isEnd }: useInfiniteScrollType =\r\n    useMoreNewsItems(selectedCategory, posts)\r\n  return (\r\n    <section\r\n      className=\"mx-auto mt-40 md:mt-60 px-30 sm:px-50 max-w-1600\"\r\n      ref={containerRef}\r\n    >\r\n      <NewsCategory selectedCategory={selectedCategory} {...rest} />\r\n      <div className=\"grid mt-45 sm:grid-cols-2 lg:grid-cols-3 sm:mt-60 md:mt-70 lg:mt-80 gap-30 sm:gap-45\">\r\n        {postList.map(\r\n          ({\r\n            node: {\r\n              id,\r\n              fields: { slug },\r\n              frontmatter,\r\n            },\r\n          }) => {\r\n            return <NewsItem {...frontmatter} link={slug} key={id} />\r\n          },\r\n        )}\r\n      </div>\r\n      <div className=\"flex justify-center mt-70 md:mt-110\">\r\n        {!isEnd && (\r\n          <button\r\n            className=\"mb-50 all:w-full all:h-70 all:sm:h-80 all:md:h-100\"\r\n            onClick={() => more()}\r\n          >\r\n            <MoreButton />\r\n          </button>\r\n        )}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default NewsList\r\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from 'components/layout/Layout'\r\nimport NewsBanner from 'components/news/NewsBanner'\r\nimport NewsDescription from 'components/news/NewsDescription'\r\nimport NewsList from 'components/news/NewsList'\r\nimport { CategoryListProps } from 'components/news/NewsList/NewsCategory'\r\nimport queryString from 'query-string'\r\nimport SEO from 'components/shared/SEO'\r\n\r\ntype NewsPageProps = {\r\n  location: {\r\n    search: string\r\n    path: string\r\n  }\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: PostListItemType[]\r\n    }\r\n  }\r\n}\r\nconst NewsPage = function ({\r\n  location: { search, path },\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n}: NewsPageProps) {\r\n  const [currentCategory, setCurrentCategory] = useState('All')\r\n\r\n  //1. 쿼리스트링을 가져온다 객체형식\r\n  const parsed = queryString.parse(search)\r\n\r\n  //2. 쿼리스트링의 key값에 category가 없다면 'All'로한다\r\n  const categoryQueryString =\r\n    typeof parsed.category !== 'string' || !parsed.category\r\n      ? 'All'\r\n      : parsed.category\r\n\r\n  const categoryList = useMemo(\r\n    () =>\r\n      edges.reduce(\r\n        (\r\n          acc: CategoryListProps['categoryList'],\r\n          {\r\n            node: {\r\n              frontmatter: { categories },\r\n            },\r\n          },\r\n        ) => {\r\n          acc['All']++\r\n          categories.forEach(key => {\r\n            acc[key] ? acc[key]++ : (acc[key] = 1)\r\n          })\r\n          return acc\r\n        },\r\n        { All: 0 },\r\n      ),\r\n    [],\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (categoryQueryString) setCurrentCategory(categoryQueryString)\r\n  }, [categoryQueryString])\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"NEWS\" description=\"뉴스 페이지\" />\r\n      <NewsBanner />\r\n      <NewsDescription />\r\n      <NewsList\r\n        itemClickCallback={setCurrentCategory}\r\n        selectedCategory={currentCategory}\r\n        categoryList={categoryList}\r\n        posts={edges}\r\n      />\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default NewsPage\r\n\r\nexport const getPostList = graphql`\r\n  query getPostList {\r\n    allMarkdownRemark(\r\n      sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            summary\r\n            date(formatString: \"YYYY-MM-DD\")\r\n            categories\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 470, height: 340, quality: 100)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["newsBanner","useStaticQuery","NewsBanner","childImageSharp","gatsbyImageData","React","className","GatsbyImage","image","alt","_ref","children","onClick","active","clsx","selectedCategory","categoryList","itemClickCallback","Object","entries","map","_ref2","name","count","CategoryButton","history","pushState","handleCategoryItemClick","key","title","date","categories","summary","thumbnail","link","Link","to","posts","containerRef","useRef","setCount","useState","postListByCategory","useMemo","filter","node","frontmatter","includes","useEffect","postList","slice","more","prev","isEnd","length","rest","useMoreNewsItems","ref","NewsCategory","id","fields","slug","NewsItem","MoreButton","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","Array","prototype","concat","call","decode","input","tokens","match","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","keys","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","isNullOrUndefined","value","strictUriEncode","encodeURIComponent","x","charCodeAt","toString","toUpperCase","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude","location","search","path","data","allMarkdownRemark","edges","currentCategory","setCurrentCategory","parsed","categoryQueryString","category","acc","forEach","All","Layout","SEO","description","NewsDescription","NewsList"],"sourceRoot":""}